{"version":3,"sources":["components/card-component/CardComponent.js","components/card-list/Clist.js","components/search-box-component/SearchBoxCcomponent.jsx","Class.js","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","className","alt","src","monster","id","name","email","Clist","monsters","map","SearchBoxCcomponent","placeholder","handleChange","type","onChange","Class","e","setState","searchField","target","value","toLowerCase","state","fetch","then","response","json","users","this","filteredMonsters","filter","includes","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAaeA,MAXf,SAAuBC,GAEnB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCMfC,MAVf,SAAeR,GACX,OACI,qBAAKC,UAAY,YAAjB,SAEQD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAiCA,QAAWA,GAAxBA,EAAQC,UCS1DM,MAff,YAA0D,IAA5BC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,aACtC,OACI,8BACI,uBACIZ,UAAY,SACZa,KAAO,SACPF,YAAaA,EACbG,SAAUF,OCqDXG,EA1Df,kDACG,aAAc,IAAD,8BACT,gBA2BJH,aAAc,SAACI,GAEV,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,MAAMC,iBA5B3C,EAAKC,MAAQ,CACTd,SAAW,GACXU,YAAc,IAJT,EADhB,qDAWG,WAAoB,IAAD,OAEfK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKV,SAAS,CAACT,SAASmB,SAf5C,oBAmCI,WAEI,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAEZW,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAKgB,cAAcU,SAASb,MAExF,OACI,gCAEI,cAAC,EAAD,CACIP,YAAY,kBACZC,aAAcgB,KAAKhB,eAGvB,cAAC,EAAD,CAAyCJ,SAAYqB,GAApCD,KAAKN,MAAMd,SAASJ,WAjDrD,GAA2B4B,a,MCQZC,MATf,WACE,OACE,sBAAKjC,UAAY,MAAjB,UACE,iDACA,cAAC,EAAD,QCKSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b46ef0ee.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CardComponent.css'\r\nfunction CardComponent(props) {\r\n\r\n    return (\r\n        <div className = \"card-container\">\r\n            <img alt=\"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n            <h2 >{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import React from 'react'\r\nimport './Clist.css'\r\nimport CardComponent from '../card-component/CardComponent'\r\n\r\nfunction Clist(props) {\r\n    return (\r\n        <div className = \"card-list\">\r\n            {\r\n                props.monsters.map(monster =><CardComponent key={monster.id}  monster = {monster}></CardComponent>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clist\r\n","import React from 'react'\r\n\r\nfunction SearchBoxCcomponent({placeholder,handleChange}) {\r\n    return (\r\n        <div>\r\n            <input \r\n                className = \"search\"\r\n                type = \"search\" \r\n                placeholder={placeholder} \r\n                onChange={handleChange}\r\n                 \r\n            ></input> \r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBoxCcomponent\r\n","import React, { Component } from 'react'\r\nimport Namelist from './components/card-list/Clist'\r\nimport SearchBox from './components/search-box-component/SearchBoxCcomponent'\r\n\r\nexport class Class extends Component {\r\n   constructor(){\r\n       super();\r\n       this.state = {\r\n           monsters : [],\r\n           searchField : ''\r\n       };\r\n \r\n   }\r\n\r\n\r\n   componentDidMount(){\r\n\r\n       fetch('https://jsonplaceholder.typicode.com/users')\r\n       .then(response=>response.json())\r\n       .then(users=>this.setState({monsters:users}))\r\n\r\n   }\r\n    /*no need to bind ' this' in oour contructor any more\r\n\r\n     arrow functions automatically allow you to set this when this thing is defined.\r\n\r\n    So when our component is getting run by javascript for the first time and it's like oh I got to instantiate\r\n\r\n    this new app class it checks inside and it sees that there's this handle change method that points to\r\n\r\n    an arrow function.*/\r\n    \r\n\r\n   handleChange= (e)=>{\r\n\r\n        this.setState({searchField:e.target.value.toLowerCase()})\r\n\r\n   }\r\n\r\n    render() {\r\n        //destructuring state\r\n        const { monsters, searchField } = this.state;\r\n        //making a filtered array   ,,, includes() search weather our searchField value exist in our array of monstername(the string we called on)\r\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField));\r\n\r\n        return (\r\n            <div>\r\n\r\n                <SearchBox \r\n                    placeholder=\"Search Monsters\" \r\n                    handleChange={this.handleChange}>\r\n                </SearchBox>\r\n\r\n                <Namelist key = {this.state.monsters.id} monsters = {filteredMonsters} >\r\n\r\n                </Namelist>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Class\r\n","import Class from './Class'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className = \"App\">\n      <h1>MONSTER ROLODEX</h1>\n      <Class></Class>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}